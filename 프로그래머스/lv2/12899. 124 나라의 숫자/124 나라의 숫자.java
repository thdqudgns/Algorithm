class Solution {
    /**
        규칙을 찾아서 적용하는 문제.
        아이디어 발상 : 
            1. 5천만까지 미리 String[] 배열에 DP로 저장해서 풀까? -> 아니야 O(N)인데, N이 5천만이니까 5천만번 연산하니까 비효율적인 것 같아.
            2. "1", "2", "4" 가 반복되니까 십진수를 3으로 나누면, 나머지를 이용해서 규칙을 찾을 수 있지 않을까? 이렇게 하면 O(log₃N)이니까 엄청 빨라질 거야.
        
        2번으로 선택
        1. 십진수 1 ~ 13까지 3으로 나누며 몫과 나머지가 어떻게 124 규칙에 적용되는지 파악함.
        2. String[] arr = {"1", "2", "4"}; - 배열을 통해 나머지와 1 2 4를 mapping 함.
        3. { n: 나눌 수, 3: 나눌 기준, Q: 몫, R: 나머지 } 라고 했을 때
           (n-1) / 3 = Q + R 이 되는데, 나머지 R을 index로 arr[R]을 하면 십진수의 순서에 맞는 1 2 4 가 반환된다.
        4. 이 값이 기존의 answer의 앞에 와야 진법이 완성된다.
        5. n = Q 로 변경하며 n이 0이 되기 전까지 3 ~ 4번을 반복한다. 그럼 점차 answer의 앞에 문자가 추가되면서 답이 나온다.
        
        입력으로 주어지는 n은 최대 5천만이고, 3^16 = 43,046,721 이므로 최대 17번 수행한다.
    */
    public String solution(int n) {
        String answer = "";
        String[] arr = {"1", "2", "4"};
        while(n > 0) {
            answer = arr[(n - 1) % 3] + answer;
            n = (n - 1) / 3;
        }
        return answer;
    }
}
